use crate::hardware::cpu::registers::Register16;

/// Describes information about the instruction set
pub struct Instruction {
    /// To match each Instruction with a specific opcode
    pub opcode: Opcode,

    /// A string that represents the instruction in a human readable way, eg LD A, (BC)
    pub mnemonic: &'static str,

    /// An optional variable to inform whether the instruction need operand stored in memory
    /// Imm can be either Imm::Eight or Imm::Sixteen depending on whether the instruction needs
    /// respectively an immediate 8-bit operand or an immediate 16-bit operand.
    /// Set to None if the instruction does not require an immediate operand.
    pub operand: Option<Imm>,

    /// An `Operation` enum to describe the type of operation is encoded in the opcode.
    pub operation: Operation,

    /// A list of clock cycles associated to the opcode.
    /// Most opcodes have exactly one opcode, but conditional instructions have two:
    /// clock_cycle[0] stores the clock cycle when the condition is true
    /// and clock_cycle[1] when the condition is false
    /// Unconditional fill the second index with Clock::None
    pub cycles: [Clock; 2],
}

/// Enumerates the instruction speed in clock cycle
pub enum Clock {
    None,
    Four,
    Eight,
    Twelve,
    Sixteen,
    Twenty,
    TwentyFour,
    ThirtyTwo,
}

pub enum Page0 {
    Byte0,
    Byte1,
    Byte2,
    Byte3,
    Byte4,
    Byte5,
    Byte6,
    Byte7,
}

/// Represents the two possible sizes of immediate operands: either 8-bit or 16-bit
pub enum Imm {
    Eight,
    Sixteen,
}

impl Instruction {
    /// Creates an Instruction struct with values given as parameter
    const fn new(
        opcode: Opcode,
        mnemonic: &'static str,
        operand: Option<Imm>,
        operation: Operation,
        cycles: [Clock; 2],
    ) -> Self {
        Self {
            opcode,
            mnemonic,
            operand,
            operation,
            cycles,
        }
    }

    /// Returns the instruction with a matching opcode
    pub fn get_by_opcode(opcode: Opcode) -> Option<&'static Instruction> {
        INSTRUCTIONS
            .iter()
            .find(|&instruction| instruction.opcode == opcode)
    }
}
/// A static array of all the instructions in the instructions set.
static INSTRUCTIONS: &[Instruction; 324] = &[
    Instruction::new(
        Opcode::Nop,
        "NOP",
        None,
        Operation::Nop,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_bc_d16,
        "LD BC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::BC, Source16::Imm16),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_bc_a,
        "LD (BC), A",
        None,
        Operation::Load8(Target8::Addr(At::BC), Source8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_bc,
        "INC BC",
        None,
        Operation::Inc16(Target16::BC),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_b,
        "INC B",
        None,
        Operation::Inc8(Target8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_b,
        "DEC B",
        None,
        Operation::Dec8(Target8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_d8,
        "LD B, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::B, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlca,
        "RLCA",
        None,
        Operation::Rlca,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a16_sp,
        "LD {:#06x}, SP",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::Addr, Source16::SP),
        [Clock::Twenty, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_hl_bc,
        "ADD HL, BC",
        None,
        Operation::Add16(Target16::HL, Source16::BC),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_bc,
        "LD A, (BC)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::BC)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_bc,
        "DEC BC",
        None,
        Operation::Dec16(Target16::BC),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_c,
        "INC C",
        None,
        Operation::Inc8(Target8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_c,
        "DEC C",
        None,
        Operation::Dec8(Target8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_d8,
        "LD C, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::C, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrca,
        "RRCA",
        None,
        Operation::Rrca,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Stop,
        "STOP",
        None,
        Operation::Stop,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_de_d16,
        "LD DE, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::DE, Source16::Imm16),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_de_a,
        "LD (DE), A",
        None,
        Operation::Load8(Target8::Addr(At::DE), Source8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_de,
        "INC DE",
        None,
        Operation::Inc16(Target16::DE),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_d,
        "INC D",
        None,
        Operation::Inc8(Target8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_d,
        "DEC D",
        None,
        Operation::Dec8(Target8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_d8,
        "LD D, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::D, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rla,
        "RLA",
        None,
        Operation::Rla,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Jr_r8,
        "JR {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::Always),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_hl_de,
        "ADD HL, DE",
        None,
        Operation::Add16(Target16::HL, Source16::DE),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_de,
        "LD A, (DE)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::DE)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_de,
        "DEC DE",
        None,
        Operation::Dec16(Target16::DE),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_e,
        "INC E",
        None,
        Operation::Inc8(Target8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_e,
        "DEC E",
        None,
        Operation::Dec8(Target8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_d8,
        "LD E, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::E, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rra,
        "RRA",
        None,
        Operation::Rra,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Jr_nz_r8,
        "JR NZ, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::NZ),
        [Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Ld_hl_d16,
        "LD HL, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::HL, Source16::Imm16),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldi_hl_a,
        "LD (HL+), A",
        None,
        Operation::Load8Inc(Target8::Addr(At::HL), Source8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_hl,
        "INC HL",
        None,
        Operation::Inc16(Target16::HL),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_h,
        "INC H",
        None,
        Operation::Inc8(Target8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_h,
        "DEC H",
        None,
        Operation::Dec8(Target8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_d8,
        "LD H, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::H, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Daa,
        "DAA",
        None,
        Operation::Daa,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Jr_z_r8,
        "JR Z, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::Z),
        [Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Add_hl_hl,
        "ADD HL, HL",
        None,
        Operation::Add16(Target16::HL, Source16::HL),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldi_a_hl,
        "LD A, (HL+)",
        None,
        Operation::Load8Inc(Target8::A, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_hl,
        "DEC HL",
        None,
        Operation::Dec16(Target16::HL),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_l,
        "INC L",
        None,
        Operation::Inc8(Target8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_l,
        "DEC L",
        None,
        Operation::Dec8(Target8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_d8,
        "LD L, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::L, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Cpl,
        "CPL",
        None,
        Operation::Cpl,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Jr_nc_r8,
        "JR NC, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::NC),
        [Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Ld_sp_d16,
        "LD SP, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::SP, Source16::Imm16),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldd_hl_a,
        "LD (HL-), A",
        None,
        Operation::Load8Dec(Target8::Addr(At::HL), Source8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_sp,
        "INC SP",
        None,
        Operation::Inc16(Target16::SP),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_ahl,
        "INC (HL)",
        None,
        Operation::Inc8(Target8::Addr(At::HL)),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_ahl,
        "DEC (HL)",
        None,
        Operation::Dec8(Target8::Addr(At::HL)),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_ahl_d8,
        "LD (HL), {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::Addr(At::HL), Source8::Imm8),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Scf,
        "SCF",
        None,
        Operation::Scf,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Jr_c_r8,
        "JR C, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::C),
        [Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Add_hl_sp,
        "ADD HL, SP",
        None,
        Operation::Add16(Target16::HL, Source16::SP),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldd_a_ahl,
        "LD A, (HL-)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_sp,
        "DEC SP",
        None,
        Operation::Dec16(Target16::SP),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Inc_a,
        "INC A",
        None,
        Operation::Inc8(Target8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Dec_a,
        "DEC A",
        None,
        Operation::Dec8(Target8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_d8,
        "LD A, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::A, Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ccf,
        "CCF",
        None,
        Operation::Ccf,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_b,
        "LD B, B",
        None,
        Operation::Load8(Target8::B, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_c,
        "LD B, C",
        None,
        Operation::Load8(Target8::B, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_d,
        "LD B, D",
        None,
        Operation::Load8(Target8::B, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_e,
        "LD B, E",
        None,
        Operation::Load8(Target8::B, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_h,
        "LD B, H",
        None,
        Operation::Load8(Target8::B, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_l,
        "LD B, L",
        None,
        Operation::Load8(Target8::B, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_ahl,
        "LD B, (HL)",
        None,
        Operation::Load8(Target8::B, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_b_a,
        "LD B, A",
        None,
        Operation::Load8(Target8::B, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_b,
        "LD C, B",
        None,
        Operation::Load8(Target8::C, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_c,
        "LD C, C",
        None,
        Operation::Load8(Target8::C, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_d,
        "LD C, D",
        None,
        Operation::Load8(Target8::C, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_e,
        "LD C, E",
        None,
        Operation::Load8(Target8::C, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_h,
        "LD C, H",
        None,
        Operation::Load8(Target8::C, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_l,
        "LD C, L",
        None,
        Operation::Load8(Target8::C, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_ahl,
        "LD C, (HL)",
        None,
        Operation::Load8(Target8::C, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_c_a,
        "LD C, A",
        None,
        Operation::Load8(Target8::C, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_b,
        "LD D, B",
        None,
        Operation::Load8(Target8::D, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_c,
        "LD D, C",
        None,
        Operation::Load8(Target8::D, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_d,
        "LD D, D",
        None,
        Operation::Load8(Target8::D, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_e,
        "LD D, E",
        None,
        Operation::Load8(Target8::D, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_h,
        "LD D, H",
        None,
        Operation::Load8(Target8::D, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_l,
        "LD D, L",
        None,
        Operation::Load8(Target8::D, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_ahl,
        "LD D, (HL)",
        None,
        Operation::Load8(Target8::D, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_d_a,
        "LD D, A",
        None,
        Operation::Load8(Target8::D, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_b,
        "LD E, B",
        None,
        Operation::Load8(Target8::E, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_c,
        "LD E, C",
        None,
        Operation::Load8(Target8::E, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_d,
        "LD E, D",
        None,
        Operation::Load8(Target8::E, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_e,
        "LD E, E",
        None,
        Operation::Load8(Target8::E, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_h,
        "LD E, H",
        None,
        Operation::Load8(Target8::E, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_l,
        "LD E, L",
        None,
        Operation::Load8(Target8::E, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_ahl,
        "LD E, (HL)",
        None,
        Operation::Load8(Target8::E, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_e_a,
        "LD E, A",
        None,
        Operation::Load8(Target8::E, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_b,
        "LD H, B",
        None,
        Operation::Load8(Target8::H, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_c,
        "LD H, C",
        None,
        Operation::Load8(Target8::H, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_d,
        "LD H, D",
        None,
        Operation::Load8(Target8::H, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_e,
        "LD H, E",
        None,
        Operation::Load8(Target8::H, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_h,
        "LD H, H",
        None,
        Operation::Load8(Target8::H, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_l,
        "LD H, L",
        None,
        Operation::Load8(Target8::H, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_ahl,
        "LD H, (HL)",
        None,
        Operation::Load8(Target8::H, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_h_a,
        "LD H, A",
        None,
        Operation::Load8(Target8::H, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_b,
        "LD L, B",
        None,
        Operation::Load8(Target8::L, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_c,
        "LD L, C",
        None,
        Operation::Load8(Target8::L, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_d,
        "LD L, D",
        None,
        Operation::Load8(Target8::L, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_e,
        "LD L, E",
        None,
        Operation::Load8(Target8::L, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_h,
        "LD L, H",
        None,
        Operation::Load8(Target8::L, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_l,
        "LD L, L",
        None,
        Operation::Load8(Target8::L, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_ahl,
        "LD L, (HL)",
        None,
        Operation::Load8(Target8::L, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_l_a,
        "LD L, A",
        None,
        Operation::Load8(Target8::L, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_b,
        "LD (HL), B",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_c,
        "LD (HL), C",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_d,
        "LD (HL), D",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_e,
        "LD (HL), E",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_h,
        "LD (HL), H",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_l,
        "LD (HL), L",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Halt,
        "HALT",
        None,
        Operation::Halt,
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_a,
        "LD (HL), A",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_b,
        "LD A, B",
        None,
        Operation::Load8(Target8::A, Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_c,
        "LD A, C",
        None,
        Operation::Load8(Target8::A, Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_d,
        "LD A, D",
        None,
        Operation::Load8(Target8::A, Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_e,
        "LD A, E",
        None,
        Operation::Load8(Target8::A, Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_h,
        "LD A, H",
        None,
        Operation::Load8(Target8::A, Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_l,
        "LD A, L",
        None,
        Operation::Load8(Target8::A, Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_ahl,
        "LD A, (HL)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_a,
        "LD A, A",
        None,
        Operation::Load8(Target8::A, Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_b,
        "ADD A, B",
        None,
        Operation::Add8(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_c,
        "ADD A, C",
        None,
        Operation::Add8(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_d,
        "ADD A, D",
        None,
        Operation::Add8(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_e,
        "ADD A, E",
        None,
        Operation::Add8(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_h,
        "ADD A, H",
        None,
        Operation::Add8(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_l,
        "ADD A, L",
        None,
        Operation::Add8(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_hl,
        "ADD A, (HL)",
        None,
        Operation::Add8(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_a,
        "ADD A, A",
        None,
        Operation::Add8(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_b,
        "ADC A, B",
        None,
        Operation::Adc(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_c,
        "ADC A, C",
        None,
        Operation::Adc(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_d,
        "ADC A, D",
        None,
        Operation::Adc(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_e,
        "ADC A, E",
        None,
        Operation::Adc(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_h,
        "ADC A, H",
        None,
        Operation::Adc(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_l,
        "ADC A, L",
        None,
        Operation::Adc(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_hl,
        "ADC A, (HL)",
        None,
        Operation::Adc(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_a,
        "ADC A, A",
        None,
        Operation::Adc(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_b,
        "SUB B",
        None,
        Operation::Sub(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_c,
        "SUB C",
        None,
        Operation::Sub(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_d,
        "SUB D",
        None,
        Operation::Sub(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_e,
        "SUB E",
        None,
        Operation::Sub(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_h,
        "SUB H",
        None,
        Operation::Sub(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_l,
        "SUB L",
        None,
        Operation::Sub(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_hl,
        "SUB (HL)",
        None,
        Operation::Sub(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_a,
        "SUB A",
        None,
        Operation::Sub(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_b,
        "SBC A, B",
        None,
        Operation::Sbc(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_c,
        "SBC A, C",
        None,
        Operation::Sbc(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_d,
        "SBC A, D",
        None,
        Operation::Sbc(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_e,
        "SBC A, E",
        None,
        Operation::Sbc(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_h,
        "SBC A, H",
        None,
        Operation::Sbc(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_l,
        "SBC A, L",
        None,
        Operation::Sbc(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_hl,
        "SBC A, (HL)",
        None,
        Operation::Sbc(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sbc_a_a,
        "SBC A, A",
        None,
        Operation::Sbc(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_b,
        "AND B",
        None,
        Operation::And(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_c,
        "AND C",
        None,
        Operation::And(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_d,
        "AND D",
        None,
        Operation::And(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_e,
        "AND E",
        None,
        Operation::And(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_h,
        "AND H",
        None,
        Operation::And(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_l,
        "AND L",
        None,
        Operation::And(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::And_hl,
        "AND (HL)",
        None,
        Operation::And(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::And_a,
        "AND A",
        None,
        Operation::And(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_b,
        "XOR B",
        None,
        Operation::Xor(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_c,
        "XOR C",
        None,
        Operation::Xor(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_d,
        "XOR D",
        None,
        Operation::Xor(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_e,
        "XOR E",
        None,
        Operation::Xor(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_h,
        "XOR H",
        None,
        Operation::Xor(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_l,
        "XOR L",
        None,
        Operation::Xor(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_hl,
        "XOR (HL)",
        None,
        Operation::Xor(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_a,
        "XOR A",
        None,
        Operation::Xor(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_b,
        "OR B",
        None,
        Operation::Or(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_c,
        "OR C",
        None,
        Operation::Or(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_d,
        "OR D",
        None,
        Operation::Or(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_e,
        "OR E",
        None,
        Operation::Or(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_h,
        "OR H",
        None,
        Operation::Or(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_l,
        "OR L",
        None,
        Operation::Or(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_hl,
        "OR (HL)",
        None,
        Operation::Or(Source8::Addr(At::HL)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_a,
        "OR A",
        None,
        Operation::Or(Source8::A),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_b,
        "CP B",
        None,
        Operation::Cp(Source8::B),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_c,
        "CP C",
        None,
        Operation::Cp(Source8::C),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_d,
        "CP D",
        None,
        Operation::Cp(Source8::D),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_e,
        "CP E",
        None,
        Operation::Cp(Source8::E),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_h,
        "CP H",
        None,
        Operation::Cp(Source8::H),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_l,
        "CP L",
        None,
        Operation::Cp(Source8::L),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_hl,
        "CP (HL)",
        None,
        Operation::Cp(Source8::Addr(At::HL)),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ret_nz,
        "RET NZ",
        None,
        Operation::Ret(Condition::NZ),
        [Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Pop_bc,
        "POP BC",
        None,
        Operation::Pop(Register16::BC),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Jp_nz_a16,
        "JP NZ, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::NZ, Source16::Imm16),
        [Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Jp_a16,
        "JP {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::Always, Source16::Imm16),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Call_nz_a16,
        "CALL NZ, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::NZ, Source16::Imm16),
        [Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Push_bc,
        "PUSH BC",
        None,
        Operation::Push(Register16::BC),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Add_a_d8,
        "ADD A, {:#04x}",
        Some(Imm::Eight),
        Operation::Add8(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_00h,
        "RST 00H",
        None,
        Operation::Rst(Page0::Byte0),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ret_z,
        "RET Z",
        None,
        Operation::Ret(Condition::Z),
        [Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Ret,
        "RET",
        None,
        Operation::Ret(Condition::Always),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Jp_z_a16,
        "JP Z, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::Z, Source16::Imm16),
        [Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Call_z_a16,
        "CALL Z, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::Z, Source16::Imm16),
        [Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Call_a16,
        "CALL {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::Always, Source16::Imm16),
        [Clock::TwentyFour, Clock::None],
    ),
    Instruction::new(
        Opcode::Adc_a_d8,
        "ADC A, {:#04x}",
        Some(Imm::Eight),
        Operation::Adc(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_08h,
        "RST 08H",
        None,
        Operation::Rst(Page0::Byte1),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ret_nc,
        "RET NC",
        None,
        Operation::Ret(Condition::NC),
        [Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Pop_de,
        "POP DE",
        None,
        Operation::Pop(Register16::DE),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Jp_nc_a16,
        "JP NC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::NC, Source16::Imm16),
        [Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Call_nc_a16,
        "CALL NC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::NC, Source16::Imm16),
        [Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Push_de,
        "PUSH DE",
        None,
        Operation::Push(Register16::DE),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Sub_d8,
        "SUB {:#04x}",
        Some(Imm::Eight),
        Operation::Sub(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_10h,
        "RST 10H",
        None,
        Operation::Rst(Page0::Byte2),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ret_c,
        "RET C",
        None,
        Operation::Ret(Condition::C),
        [Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::Reti,
        "RETI",
        None,
        Operation::Reti,
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Jp_c_a16,
        "JP C, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::C, Source16::Imm16),
        [Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Call_c_a16,
        "CALL C, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::C, Source16::Imm16),
        [Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::Sbc_a_d8,
        "SBC A, {:#04x}",
        Some(Imm::Eight),
        Operation::Sbc(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_18h,
        "RST 18H",
        None,
        Operation::Rst(Page0::Byte3),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldh_a8_a,
        "LDH {:#04x}, A",
        Some(Imm::Eight),
        Operation::Load8(Target8::Addr(At::Imm8), Source8::A),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Pop_hl,
        "POP HL",
        None,
        Operation::Pop(Register16::HL),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_ac_a,
        "LD (C), A",
        None,
        Operation::Load8(Target8::Addr(At::C), Source8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Push_hl,
        "PUSH HL",
        None,
        Operation::Push(Register16::HL),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::And_d8,
        "AND {:#04x}",
        Some(Imm::Eight),
        Operation::And(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_20h,
        "RST 20H",
        None,
        Operation::Rst(Page0::Byte4),
        [Clock::Sixteen, Clock::None],
    ),
    //TODO: pas certaine de cette instruction
    Instruction::new(
        Opcode::Add_sp_r8,
        "ADD SP, {:#04x}",
        Some(Imm::Eight),
        Operation::Add16(Target16::SP, Source16::Imm8),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Jp_ahl,
        "JP (HL)",
        None,
        Operation::Jp(Condition::Always, Source16::HL),
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a16_a,
        "LD {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load8(Target8::Addr(At::Imm16), Source8::A),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_d8,
        "XOR {:#04x}",
        Some(Imm::Eight),
        Operation::Xor(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_28h,
        "RST 20H",
        None,
        Operation::Rst(Page0::Byte5),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ldh_a_a8,
        "LDH A, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::A, Source8::Addr(At::Imm8)),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Pop_af,
        "POP AF",
        None,
        Operation::Pop(Register16::AF),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_ac,
        "LD A, (C)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::C)),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Di,
        "DI",
        None,
        Operation::Di,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Push_af,
        "PUSH AF",
        None,
        Operation::Push(Register16::AF),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Or_d8,
        "OR {:#04x}",
        Some(Imm::Eight),
        Operation::Or(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_30h,
        "RST 30H",
        None,
        Operation::Rst(Page0::Byte6),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_hl_sp_r8,
        "LD HL, SP+{:#04x}",
        Some(Imm::Eight),
        Operation::LoadHL(Source16::SP, Source16::Imm8),
        [Clock::Twelve, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_sp_hl,
        "LD SP, HL",
        None,
        Operation::Load16(Target16::SP, Source16::HL),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Ld_a_a16,
        "LD A, {:#08x}",
        Some(Imm::Sixteen),
        Operation::Load8(Target8::A, Source8::Addr(At::Imm16)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Xor_d8,
        "XOR {:#04x}",
        Some(Imm::Eight),
        Operation::Xor(Source8::Imm8),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Ei,
        "EI",
        None,
        Operation::Ei,
        [Clock::Four, Clock::None],
    ),
    Instruction::new(
        Opcode::Cp_d8,
        "CP {:#04x}",
        Some(Imm::Eight),
        Operation::Cp(Source8::Imm8),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rst_38h,
        "RST 38H",
        None,
        Operation::Rst(Page0::Byte7),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_b,
        "RLC B",
        None,
        Operation::Rlc(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_c,
        "RLC C",
        None,
        Operation::Rlc(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_d,
        "RLC D",
        None,
        Operation::Rlc(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_e,
        "RLC E",
        None,
        Operation::Rlc(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_h,
        "RLC H",
        None,
        Operation::Rlc(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_l,
        "RLC L",
        None,
        Operation::Rlc(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_hl,
        "RLC HL",
        None,
        Operation::Rlc(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Rlc_a,
        "RLC A",
        None,
        Operation::Rlc(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_b,
        "RRC B",
        None,
        Operation::Rrc(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_c,
        "RRC C",
        None,
        Operation::Rrc(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_d,
        "RRC D",
        None,
        Operation::Rrc(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_e,
        "RRC E",
        None,
        Operation::Rrc(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_h,
        "RRC H",
        None,
        Operation::Rrc(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_l,
        "RRC L",
        None,
        Operation::Rrc(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_hl,
        "RRC HL",
        None,
        Operation::Rrc(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Rrc_a,
        "RRC A",
        None,
        Operation::Rrc(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_b,
        "RL B",
        None,
        Operation::Rl(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_c,
        "RL C",
        None,
        Operation::Rl(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_d,
        "RL D",
        None,
        Operation::Rl(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_e,
        "RL E",
        None,
        Operation::Rl(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_h,
        "RL H",
        None,
        Operation::Rl(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_l,
        "RL L",
        None,
        Operation::Rl(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_hl,
        "RL HL",
        None,
        Operation::Rl(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Rl_a,
        "RL A",
        None,
        Operation::Rl(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_b,
        "RR B",
        None,
        Operation::Rr(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_c,
        "RR C",
        None,
        Operation::Rr(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_d,
        "RR D",
        None,
        Operation::Rr(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_e,
        "RR E",
        None,
        Operation::Rr(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_h,
        "RR H",
        None,
        Operation::Rr(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_l,
        "RR L",
        None,
        Operation::Rr(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_hl,
        "RR HL",
        None,
        Operation::Rr(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Rr_a,
        "RR A",
        None,
        Operation::Rr(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_b,
        "SLA B",
        None,
        Operation::Sla(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_c,
        "SLA C",
        None,
        Operation::Sla(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_d,
        "SLA D",
        None,
        Operation::Sla(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_e,
        "SLA E",
        None,
        Operation::Sla(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_h,
        "SLA H",
        None,
        Operation::Sla(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_l,
        "SLA L",
        None,
        Operation::Sla(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_hl,
        "SLA HL",
        None,
        Operation::Sla(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Sla_a,
        "SLA A",
        None,
        Operation::Sla(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_b,
        "SRA B",
        None,
        Operation::Sra(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_c,
        "SRA C",
        None,
        Operation::Sra(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_d,
        "SRA D",
        None,
        Operation::Sra(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_e,
        "SRA E",
        None,
        Operation::Sra(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_h,
        "SRA H",
        None,
        Operation::Sra(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_l,
        "SRA L",
        None,
        Operation::Sra(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_hl,
        "SRA HL",
        None,
        Operation::Sra(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Sra_a,
        "SRA A",
        None,
        Operation::Sra(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_b,
        "SWAP B",
        None,
        Operation::Swap(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_c,
        "SWAP C",
        None,
        Operation::Swap(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_d,
        "SWAP D",
        None,
        Operation::Swap(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_e,
        "SWAP E",
        None,
        Operation::Swap(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_h,
        "SWAP H",
        None,
        Operation::Swap(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_l,
        "SWAP L",
        None,
        Operation::Swap(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_hl,
        "SWAP HL",
        None,
        Operation::Swap(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Swap_a,
        "SWAP A",
        None,
        Operation::Swap(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_b,
        "SRL B",
        None,
        Operation::Srl(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_c,
        "SRL C",
        None,
        Operation::Srl(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_d,
        "SRL D",
        None,
        Operation::Srl(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_e,
        "SRL E",
        None,
        Operation::Srl(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_h,
        "SRL H",
        None,
        Operation::Srl(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_l,
        "SRL L",
        None,
        Operation::Srl(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_hl,
        "SRL HL",
        None,
        Operation::Srl(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Srl_a,
        "SRL A",
        None,
        Operation::Srl(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_b,
        "BIT 0, B",
        None,
        Operation::Sla(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_c,
        "BIT 0, C",
        None,
        Operation::Sla(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_d,
        "BIT 0, D",
        None,
        Operation::Sla(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_e,
        "BIT 0, E",
        None,
        Operation::Sla(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_h,
        "BIT 0, H",
        None,
        Operation::Sla(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_l,
        "BIT 0, L",
        None,
        Operation::Sla(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_hl,
        "BIT 0, HL",
        None,
        Operation::Sla(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_0_a,
        "BIT 0, A",
        None,
        Operation::Sla(Target8::A),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_b,
        "BIT 1,B",
        None,
        Operation::Sra(Target8::B),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_c,
        "BIT 1,C",
        None,
        Operation::Sra(Target8::C),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_d,
        "BIT 1,D",
        None,
        Operation::Sra(Target8::D),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_e,
        "BIT 1,E",
        None,
        Operation::Sra(Target8::E),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_h,
        "BIT 1,H",
        None,
        Operation::Sra(Target8::H),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_l,
        "BIT 1,L",
        None,
        Operation::Sra(Target8::L),
        [Clock::Eight, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_hl,
        "BIT 1,HL",
        None,
        Operation::Sra(Target8::Addr(At::HL)),
        [Clock::Sixteen, Clock::None],
    ),
    Instruction::new(
        Opcode::Bit_1_a,
        "BIT 1,A",
        None,
        Operation::Sra(Target8::A),
        [Clock::Eight, Clock::None],
    ),
];

#[derive(PartialEq)]
pub enum Condition {
    NZ,
    NC,
    C,
    Z,
    Always,
}

#[derive(PartialEq)]
pub enum At {
    HL,
    BC,
    DE,
    Imm16,
    C,
    Imm8,
}

#[derive(PartialEq)]
pub enum Source8 {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    Imm8,
    Addr(At),
}

#[derive(PartialEq)]
pub enum Target8 {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    Addr(At),
}

#[derive(PartialEq)]
pub enum Target16 {
    //AF,
    BC,
    DE,
    HL,
    SP,
    Addr,
}

#[derive(PartialEq)]
pub enum Source16 {
    //AF,
    BC,
    DE,
    HL,
    SP,
    Imm16,
    Imm8,
}

pub enum Bit {
    Zero,
    One,
    Two,
    Three,
    Four,
    Five,
    Six,
    Seven,
}

/// Represents all the possible operations from the instruction set
pub enum Operation {
    /// 8-bit load instructions
    Load8(Target8, Source8),

    Load8Dec(Target8, Source8),

    Load8Inc(Target8, Source8),

    /// 16-bit load instructions
    Load16(Target16, Source16),

    Push(Register16),

    Pop(Register16),

    /// 8-bit arithmetic / logic instructions
    Add8(Source8),

    Adc(Source8),

    Sub(Source8),

    Sbc(Source8),

    And(Source8),

    Xor(Source8),

    Or(Source8),

    Cp(Source8),

    Inc8(Target8),

    Dec8(Target8),

    Daa,

    Cpl,

    /// 16-bit Arithmetic/Logic instructions
    Add16(Target16, Source16),

    Inc16(Target16),

    Dec16(Target16),

    //TODO: RENAME
    LoadHL(Source16, Source16),

    /// Rotate and Shift instructions
    Rlca,

    Rla,

    Rrca,

    Rra,

    Rlc(Target8),

    Rl(Target8),

    Rrc(Target8),

    Rr(Target8),

    Sla(Target8),

    Swap(Target8),

    Sra(Target8),

    Srl(Target8),

    /// Single-bit Operations instructions
    Bit(Bit, Target8),

    Set(Bit, Target8),

    Res(Bit, Target8),

    /// CPU Control instructions
    Ccf,

    Scf,

    Nop,

    Halt,

    Stop,

    Di,

    Ei,

    /// Jump instructions
    Jp(Condition, Source16),

    Jr(Condition),

    Call(Condition, Source16),

    Ret(Condition),

    Reti,

    Rst(Page0),
}

/// Lists all the GameBoy opcode both regular and CB-prefixed
#[allow(non_camel_case_types)]
#[derive(PartialEq)]
pub enum Opcode {
    Nop,
    Ld_bc_d16,
    Ld_bc_a,
    Inc_bc,
    Inc_b,
    Dec_b,
    Ld_b_d8,
    Rlca,
    Ld_a16_sp,
    Add_hl_bc,
    Ld_a_bc,
    Dec_bc,
    Inc_c,
    Dec_c,
    Ld_c_d8,
    Rrca,
    Stop,
    Ld_de_d16,
    Ld_de_a,
    Inc_de,
    Inc_d,
    Dec_d,
    Ld_d_d8,
    Rla,
    Jr_r8,
    Add_hl_de,
    Ld_a_de,
    Dec_de,
    Inc_e,
    Dec_e,
    Ld_e_d8,
    Rra,
    Jr_nz_r8,
    Ld_hl_d16,
    Ldi_hl_a,
    Inc_hl,
    Inc_h,
    Dec_h,
    Ld_h_d8,
    Daa,
    Jr_z_r8,
    Add_hl_hl,
    Ldi_a_hl,
    Dec_hl,
    Inc_l,
    Dec_l,
    Ld_l_d8,
    Cpl,
    Jr_nc_r8,
    Ld_sp_d16,
    Ldd_hl_a,
    Inc_sp,
    Inc_ahl,
    Dec_ahl,
    Ld_ahl_d8,
    Scf,
    Jr_c_r8,
    Add_hl_sp,
    Ldd_a_ahl,
    Dec_sp,
    Inc_a,
    Dec_a,
    Ld_a_d8,
    Ccf,
    Ld_b_b,
    Ld_b_c,
    Ld_b_d,
    Ld_b_e,
    Ld_b_h,
    Ld_b_l,
    Ld_b_ahl,
    Ld_b_a,
    Ld_c_b,
    Ld_c_c,
    Ld_c_d,
    Ld_c_e,
    Ld_c_h,
    Ld_c_l,
    Ld_c_ahl,
    Ld_c_a,
    Ld_d_b,
    Ld_d_c,
    Ld_d_d,
    Ld_d_e,
    Ld_d_h,
    Ld_d_l,
    Ld_d_ahl,
    Ld_d_a,
    Ld_e_b,
    Ld_e_c,
    Ld_e_d,
    Ld_e_e,
    Ld_e_h,
    Ld_e_l,
    Ld_e_ahl,
    Ld_e_a,
    Ld_h_b,
    Ld_h_c,
    Ld_h_d,
    Ld_h_e,
    Ld_h_h,
    Ld_h_l,
    Ld_h_ahl,
    Ld_h_a,
    Ld_l_b,
    Ld_l_c,
    Ld_l_d,
    Ld_l_e,
    Ld_l_h,
    Ld_l_l,
    Ld_l_ahl,
    Ld_l_a,
    Ld_hl_b,
    Ld_hl_c,
    Ld_hl_d,
    Ld_hl_e,
    Ld_hl_h,
    Ld_hl_l,
    Halt,
    Ld_hl_a,
    Ld_a_b,
    Ld_a_c,
    Ld_a_d,
    Ld_a_e,
    Ld_a_h,
    Ld_a_l,
    Ld_a_ahl,
    Ld_a_a,
    Add_a_b,
    Add_a_c,
    Add_a_d,
    Add_a_e,
    Add_a_h,
    Add_a_l,
    Add_a_hl,
    Add_a_a,
    Adc_a_b,
    Adc_a_c,
    Adc_a_d,
    Adc_a_e,
    Adc_a_h,
    Adc_a_l,
    Adc_a_hl,
    Adc_a_a,
    Sub_b,
    Sub_c,
    Sub_d,
    Sub_e,
    Sub_h,
    Sub_l,
    Sub_hl,
    Sub_a,
    Sbc_a_b,
    Sbc_a_c,
    Sbc_a_d,
    Sbc_a_e,
    Sbc_a_h,
    Sbc_a_l,
    Sbc_a_hl,
    Sbc_a_a,
    And_b,
    And_c,
    And_d,
    And_e,
    And_h,
    And_l,
    And_hl,
    And_a,
    Xor_b,
    Xor_c,
    Xor_d,
    Xor_e,
    Xor_h,
    Xor_l,
    Xor_hl,
    Xor_a,
    Or_b,
    Or_c,
    Or_d,
    Or_e,
    Or_h,
    Or_l,
    Or_hl,
    Or_a,
    Cp_b,
    Cp_c,
    Cp_d,
    Cp_e,
    Cp_h,
    Cp_l,
    Cp_hl,
    Cp_a,
    Ret_nz,
    Pop_bc,
    Jp_nz_a16,
    Jp_a16,
    Call_nz_a16,
    Push_bc,
    Add_a_d8,
    Rst_00h,
    Ret_z,
    Ret,
    Jp_z_a16,
    Call_z_a16,
    Call_a16,
    Adc_a_d8,
    Rst_08h,
    Ret_nc,
    Pop_de,
    Jp_nc_a16,
    Call_nc_a16,
    Push_de,
    Sub_d8,
    Rst_10h,
    Ret_c,
    Reti,
    Jp_c_a16,
    Call_c_a16,
    Sbc_a_d8,
    Rst_18h,
    Ldh_a8_a,
    Pop_hl,
    Ld_ac_a,
    Push_hl,
    And_d8,
    Rst_20h,
    Add_sp_r8,
    Jp_ahl,
    Ld_a16_a,
    Xor_d8,
    Rst_28h,
    Ldh_a_a8,
    Pop_af,
    Ld_a_ac,
    Di,
    Push_af,
    Or_d8,
    Rst_30h,
    Ld_hl_sp_r8,
    Ld_sp_hl,
    Ld_a_a16,
    Ei,
    Cp_d8,
    Rst_38h,
    Rlc_b,
    Rlc_c,
    Rlc_d,
    Rlc_e,
    Rlc_h,
    Rlc_l,
    Rlc_hl,
    Rlc_a,
    Rrc_b,
    Rrc_c,
    Rrc_d,
    Rrc_e,
    Rrc_h,
    Rrc_l,
    Rrc_hl,
    Rrc_a,
    Rl_b,
    Rl_c,
    Rl_d,
    Rl_e,
    Rl_h,
    Rl_l,
    Rl_hl,
    Rl_a,
    Rr_b,
    Rr_c,
    Rr_d,
    Rr_e,
    Rr_h,
    Rr_l,
    Rr_hl,
    Rr_a,
    Sla_b,
    Sla_c,
    Sla_d,
    Sla_e,
    Sla_h,
    Sla_l,
    Sla_hl,
    Sla_a,
    Sra_b,
    Sra_c,
    Sra_d,
    Sra_e,
    Sra_h,
    Sra_l,
    Sra_hl,
    Sra_a,
    Swap_b,
    Swap_c,
    Swap_d,
    Swap_e,
    Swap_h,
    Swap_l,
    Swap_hl,
    Swap_a,
    Srl_b,
    Srl_c,
    Srl_d,
    Srl_e,
    Srl_h,
    Srl_l,
    Srl_hl,
    Srl_a,
    Bit_0_b,
    Bit_0_c,
    Bit_0_d,
    Bit_0_e,
    Bit_0_h,
    Bit_0_l,
    Bit_0_hl,
    Bit_0_a,
    Bit_1_b,
    Bit_1_c,
    Bit_1_d,
    Bit_1_e,
    Bit_1_h,
    Bit_1_l,
    Bit_1_hl,
    Bit_1_a,
}
