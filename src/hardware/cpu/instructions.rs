/// https://gbdev.io/pandocs/CPU_Instruction_Set.html

/// Represents both 8-bit and 16-bit instructions
pub struct Instruction {

    /// The portion of the instruction specifying the operation to perform. In the case of
    pub opcode: Opcode,

    /// A string that represents the instruction eg LD A (BC)
    pub mnemonic: &'static str,

    pub operand: Option<Imm>,

    /// The operation to perform
    pub operation: Operation,
    
    /// A list of clock cycles associated to the opcode, most opcodes have exactly one opcode, but
    /// conditional instructions have two: clock_cycle[0] stores the clock cycle when the condition
    /// is true and clock_cycle[1] when the condition is false
    pub cycles: Vec<Clock>,
}

/// Enumerates the instructions speed in clock cycle
pub enum Clock {
    Four,
    Eight,
    Twelve,
    Sixteen,
    Twenty,
    TwentyFour,
    ThirtyTwo,
}

pub enum Page0 {
    Byte0,
    Byte1,
    Byte2,
    Byte3,
    Byte4,
    Byte5,
    Byte6,
}
pub enum Imm {
    Eight,
    Sixteen,
}

impl Instruction {
    /// ...
    pub fn new(opcode: Opcode, mnemonic: &str, operand: Option<Imm>, operation: Operation, cycles: vec<Clock>) -> Self {
        Self {
            opcode: opcode,
            mnemonic: mnemonic,
            operand: operand,
            operation: operation,
            cycles: cycles,
        }
    }

    pub fn getByOpcode(opcode: Opcode) -> Option<&'static Instruction> {
        for instruction in INSTRUCTIONS {
            if instruction.opcode == opcode {
                return Some(instruction)
            }
        }
        None 
    }
}

static INSTRUCTIONS: &'static [Instruction; 323] = &[
    Instruction::new(
        Opcode::NOP,
        "NOP",
        None,
        Operation::NOP,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_BC_d16,
        "LD BC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::BC, Source16::Imm16),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_BC_A,
        "LD (BC), A",
        None,
        Operation::Load8(Target8::Addr(At::BC), Source8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_BC,
        "INC BC",
        None,
        Operation::Inc16(Target16::BC),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_B,
        "INC B",
        None,
        Operation::Inc8(Target8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_B,
        "DEC B",
        None,
        Operation::Dec8(Target8::B),
        vec![Clock::Four ],
    ),
    Instruction::new(
        Opcode::LD_B_d8,
        "LD B, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::B, Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLCA,
        "RLCA",
        None,
        Operation::Rlca,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_a16_SP,
        "LD {:#06x}, SP",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::Addr, Source16::SP),
        vec![Clock::Twenty],
    ),
    Instruction::new(
        Opcode::ADD_HL_BC,
        "ADD HL, BC",
        None,
        Operation::Add16(Target16::HL, Source16::BC),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_A_BC,
        "LD A, (BC)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::BC)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DEC_BC,
        "DEC BC",
        None,
        Operation::Dec16(Target16::BC),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_C,
        "INC C",
        Operation::Inc8(Target8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_C,
        "DEC C",
        Operation::Dec8(Target8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_d8,
        "LD C, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::C, Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRCA,
        "RRCA",
        None,
        Operation::Rrca,
        vec![Clock::Four],
    ),

    /// 0x10-0x1F
    Instruction::new(
        Opcode::STOP,
        "STOP",
        None,
        Operation::Stop,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_DE_d16,
        "LD DE, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::DE, Source16::Imm16),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_DE_A,
        "LD (DE), A",
        None,
        Operation::Load8(Target8::Addr(At::DE), Source8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_DE,
        "INC DE",
        None,
        Operation::Inc16(Target16::DE),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_D,
        "INC D",
        None,
        Operation::Inc8(Target8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_D,
        "DEC D",
        None,
        Operation::Dec8(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_d8,
        "LD D, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::D, Source8::Imm8)
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLA,
        "RLA",
        None,
        Operation::Rla,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::JR_r8,
        "JR {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::Always),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::ADD_HL_DE,
        "ADD HL, DE",
        None,
        Operation::Add16(Target16::HL, Source16::DE),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_A_DE,
        "LD A, (DE)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::DE)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DEC_DE,
        "DEC DE",
        None,
        Operation::Dec16(Target16::DE),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_E,
        "INC E",
        None,
        Operation::Inc8(Target8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_E,
        "DEC E",
        None,
        Operation::Dec8(Target8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_d8,
        "LD E, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::E, Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRA,
        "RRA",
        None,
        Operation::Rra,
        vec![Clock::Four],
    ),
    /// 0x20 - 0x2F
    Instruction::new(
        Opcode::JR_NZ_r8,
        "JR NZ, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::NZ),
        vec![Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_HL_d16,
        "LD HL, {:#06x}",
        Operation::Load16(Target16::HL, Source16::Imm16),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LDI_HL_A,
        "LD (HL+), A",
        None,
        Operation::Load8Inc(Target8::Addr(At::HL), Source8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_HL,
        "INC HL",
        None,
        Operation::Inc16(Target16::HL),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_H,
        "INC H",
        None,
        Operation::Inc8(Target8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_H,
        "DEC H",
        None,
        Operation::Dec8(Target8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_d8,
        "LD H, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::H, Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DAA,
        "DAA",
        None,
        Operation::Daa,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::JR_Z_r8,
        "JR Z, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::Z),
        vec![Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::ADD_HL_HL,
        "ADD HL, HL",
        None,
        Operation::Add16(Target16::HL, Source16::HL),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LDI_A_HL,
        "LD A, (HL+)",
        None,
        Operation::Load8Inc(Target8::A, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DEC_HL,
        "DEC HL",
        None,
        Operation::Dec16(Target16::HL),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_L,
        "INC L",
        None,
        Operation::Inc8(Target8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_L,
        "DEC L",
        None,
        Operation::Dec8(Target8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_d8,
        "LD L, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::L. Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::CPL,
        "CPL",
        None,
        Operation::Cpl,
        vec![Clock::Four],
    ),
    /// 0x30 -0x3F
    Instruction::new(
        Opcode::JR_NC_r8,
        "JR NC, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::NC),
        vec![Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_SP_d16,
        "LD SP, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load16(Target16::SP, Source16::Imm16),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LDD_HL_A,
        "LD (HL-), A",
        None,
        Operation::Load8Dec(Target8::Addr(At::HL), Source8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_SP,
        "INC SP",
        None,
        Operation::Inc16(Target16::SP),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_aHL,
        "INC (HL)",
        None,
        Operation::Inc8(Target8::Addr(At::HL)),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::DEC_aHL,
        "DEC (HL)",
        None,
        Operation::Dec8(Target8::Addr(At::HL)),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_aHL_d8,
        "LD (HL), {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::Addr(At::HL), Source8::Imm8),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::SCF,
        "SCF",
        None,
        Operation::Scf,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::JR_C_r8,
        "JR C, {:#04x}",
        Some(Imm::Eight),
        Operation::Jr(Condition::C),
        vec![Clock::Twelve, Clock::Eight],
    ),
    Instruction::new(
        Opcode::ADD_HL_SP,
        "ADD HL, SP",
        None,
        Operation::Add16(Target16::HL, Source16::SP),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LDD_A_aHL,
        "LD A, (HL-)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DEC_SP,
        "DEC SP",
        None,
        Operation::Dec16(Target16::SP),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::INC_A,
        "INC A",
        None,
        Operation::Inc8(Target8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::DEC_A,
        "DEC A",
        None,
        Operation::Dec8(Target8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_d8,
        "LD A, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8(Target8::A, Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::CCF,
        "CCF",
        None,
        Operation::Ccf,
        vec![Clock::Four],
    ),
    /// 0x40 - 0x4F
    Instruction::new(
        Opcode::LD_B_B,
        "LD B, B",
        None,
        Operation::Load8(Target8::B, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_C,
        "LD B, C",
        None,
        Operation::Load8(Target8::B, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_D,
        "LD B, D",
        None,
        Operation::Load8(Target8::B, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_E,
        "LD B, E",
        None,
        Operation::Load8(Target8::B, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_H,
        "LD B, H",
        None,
        Operation::Load8(Target8::B, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_L,
        "LD B, L",
        None,
        Operation::Load8(Target8::B, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_B_aHL,
        "LD B, (HL)",
        None,
        Operation::Load8(Target8::B, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_B_A,
        "LD B, A",
        None,
        Operation::Load8(Target8::B, Source8::A),
        vec![Clock::Four],
    ),

    Instruction::new(
        Opcode::LD_C_B,
        "LD C, B",
        None,
        Operation::Load8(Target8::C, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_C,
        "LD C, C",
        None,
        Operation::Load8(Target8::C, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_D,
        "LD C, D",
        None,
        Operation::Load8(Target8::C, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_E,
        "LD C, E",
        None,
        Operation::Load8(Target8::C, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_H,
        "LD C, H",
        None,
        Operation::Load8(Target8::C, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_L,
        "LD C, L",
        None,
        Operation::Load8(Target8::C, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_C_aHL,
        "LD C, (HL)",
        None,
        Operation::Load8(Target8::C, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_C_A,
        "LD C, A",
        None,
        Operation::Load8(Target8::C, Source8::A),
        vec![Clock::Four],
    ),
    /// 0x50 = 0x5F
    Instruction::new(
        Opcode::LD_D_B,
        "LD D, B",
        None,
        Operation::Load8(Target8::D, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_C,
        "LD D, C",
        None,
        Operation::Load8(Target8::D, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_D,
        "LD D, D",
        None,
        Operation::Load8(Target8::D, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_E,
        "LD D, E",
        None,
        Operation::Load8(Target8::D, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_H,
        "LD D, H",
        None,
        Operation::Load8(Target8::D, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_L,
        "LD D, L",
        None,
        Operation::Load8(Target8::D, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_D_aHL,
        "LD D, (HL)",
        None,
        Operation::Load8(Target8::D, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_D_A,
        "LD D, A",
        None,
        Operation::Load8(Target8::D, Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_B,
        "LD E, B",
        None,
        Operation::Load8(Target8::E, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_C,
        "LD E, C",
        None,
        Operation::Load8(Target8::E, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_D,
        "LD E, D",
        None,
        Operation::Load8(Target8::E, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_E,
        "LD E, E",
        None,
        Operation::Load8(Target8::E, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_H,
        "LD E, H",
        None,
        Operation::Load8(Target8::E, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_L,
        "LD E, L",
        None,
        Operation::Load8(Target8::E, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_E_aHL,
        "LD E, (HL)",
        None,
        Operation::Load8(Target8::E, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_E_A,
        "LD E, A",
        None,
        Operation::Load8(Target8::E, Source8::A),
        vec![Clock::Four],
    ),
    /// 0x60 - 0x6F
    Instruction::new(
        Opcode::LD_H_B,
        "LD H, B",
        None,
        Operation::Load8(Target8::H, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_C,
        "LD H, C",
        None,
        Operation::Load8(Target8::H, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_D,
        "LD H, D",
        None,
        Operation::Load8(Target8::H, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_E,
        "LD H, E",
        None,
        Operation::Load8(Target8::H, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_H,
        "LD H, H",
        None,
        Operation::Load8(Target8::H, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_L,
        "LD H, L",
        None,
        Operation::Load8(Target8::H, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_H_aHL,
        "LD H, (HL)",
        None,
        Operation::Load8(Target8::H, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_H_A,
        "LD H, A",
        None,
        Operation::Load8(Target8::H, Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_B,
        "LD L, B",
        None,
        Operation::Load8(Target8::L, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_C,
        "LD L, C",
        None,
        Operation::Load8(Target8::L, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_D,
        "LD L, D",
        None,
        Operation::Load8(Target8::L, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_E,
        "LD L, E",
        None,
        Operation::Load8(Target8::L, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_H,
        "LD L, H",
        None,
        Operation::Load8(Target8::L, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_L,
        "LD L, L",
        None,
        Operation::Load8(Target8::L, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_L_aHL,
        "LD L, (HL)",
        None,
        Operation::Load8(Target8::L, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_L_A,
        "LD L, A",
        None,
        Operation::Load8(Target8::L, Source8::A),
        vec![Clock::Four],
    ),
    /// 0x70 - 0x7F
    Instruction::new(
        Opcode::LD_HL_B,
        "LD (HL), B",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_HL_C,
        "LD (HL), C",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_HL_D,
        "LD (HL), D",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_HL_E,
        "LD (HL), E",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_HL_H,
        "LD (HL), H",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_HL_L,
        "LD (HL), L",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::HALT,
        "HALT",
        None,
        Operation::Halt,
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_HL_A,
        "LD (HL), A",
        None,
        Operation::Load8(Target8::Addr(At::HL), Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_B,
        "LD A, B",
        None,
        Operation::Load8(Target8::A, Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_C,
        "LD A, C",
        None,
        Operation::Load8(Target8::A, Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_D,
        "LD A, D",
        None,
        Operation::Load8(Target8::A, Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_E,
        "LD A, E",
        None,
        Operation::Load8(Target8::A, Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_H,
        "LD A, H",
        None,
        Operation::Load8(Target8::A, Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_L,
        "LD A, L",
        None,
        Operation::Load8(Target8::A, Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_A_aHL,
        "LD A, (HL)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::LD_A_A,
        "LD A, A",
        None,
        Operation::Load8(Target8::A, Source8::A),
        vec![Clock::Four],
    ),
    /// 0x80 - 0x8F
    Instruction::new(
        Opcode::ADD_A_B,
        "ADD A, B",
        None,
        Operation::Add8(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_C,
        "ADD A, C",
        None,
        Operation::Add8(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_D,
        "ADD A, D",
        None,
        Operation::Add8(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_E,
        "ADD A, E",
        None,
        Operation::Add8(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_H,
        "ADD A, H",
        None,
        Operation::Add8(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_L,
        "ADD A, L",
        None,
        Operation::Add8(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADD_A_HL,
        "ADD A, (HL)",
        None,
        Operation::Add8(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::ADD_A_A,
        "ADD A, A",
        None,
        Operation::Add8(Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_B,
        "ADC A, B",
        None,
        Operation::Adc(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_C,
        "ADC A, C",
        None,
        Operation::Adc(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_D,
        "ADC A, D",
        None,
        Operation::Adc(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_E,
        "ADC A, E",
        None,
        Operation::Adc(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_H,
        "ADC A, H",
        None,
        Operation::Adc(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_L,
        "ADC A, L",
        None,
        Operation::Adc(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::ADC_A_HL,
        "ADC A, (HL)",
        None,
        Operation::Adc(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::ADC_A_A,
        "ADC A, A",
        None,
        Operation::Adc(Source8::A),
        vec![Clock::Four],
    ),
    /// 0x90 - 0x9F
    Instruction::new(
        Opcode::SUB_B,
        "SUB B",
        None,
        Operation::Sub(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_C,
        "SUB C",
        None,
        Operation::Sub(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_D,
        "SUB D",
        None,
        Operation::Sub(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_E,
        "SUB E",
        None,
        Operation::Sub(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_H,
        "SUB H",
        None,
        Operation::Sub(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_L,
        "SUB L",
        None,
        Operation::Sub(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SUB_HL,
        "SUB (HL)",
        None,
        Operation::Sub(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SUB_A,
        "SUB A",
        None,
        Operation::Sub(Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_A_B,
        "SBC A, B",
        None,
        Operation::Sbc(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_A_C,
        "SBC A, C",
        None,
        Operation::Sbc(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_A_D,
        "SBC A, D",
        None,
        Operation::Sbc(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_E,
        "SBC A, E",
        None,
        Operation::Sbc(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_H,
        "SBC A, H",
        None,
        Operation::Sbc(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_L,
        "SBC A, L",
        None,
        Operation::Sbc(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::SBC_A_HL,
        "SBC A, (HL)",
        None,
        Operation::Sbc(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SBC_A_A,
        "SBC A, A",
        None,
        Operation::Sbc(Source8::A),
        vec![Clock::Four],
    ),
    /// 0xA0 - 0xAF
    Instruction::new(
        Opcode::AND_B,
        "AND B",
        None,
        Operation::And(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_C,
        "AND C",
        None,
        Operation::And(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_D,
        "AND D",
        None,
        Operation::And(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_E,
        "AND E",
        None,
        Operation::And(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_H,
        "AND H",
        None,
        Operation::And(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_L,
        "AND L",
        None,
        Operation::And(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::AND_HL,
        "AND (HL)",
        None,
        Operation::And(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::AND_A,
        "AND A",
        None,
        Operation::And(Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_B,
        "XOR B",
        None,
        Operation::Xor(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_C,
        "XOR C",
        None,
        Operation::Xor(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_D,
        "XOR D",
        None,
        Operation::Xor(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_E,
        "XOR E",
        None,
        Operation::Xor(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_H,
        "XOR H",
        None,
        Operation::Xor(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_L,
        "XOR L",
        None,
        Operation::Xor(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::XOR_HL,
        "XOR (HL)",
        None,
        Operation::Xor(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::XOR_A,
        "XOR A",
        None,
        Operation::Xor(Source8::A),
        vec![Clock::Four],
    ),
    /// 0xB0 - 0xBF
    Instruction::new(
        Opcode::OR_B,
        "OR B",
        None,
        Operation::Or(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_C,
        "OR C",
        None,
        Operation::Or(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_D,
        "OR D",
        None,
        Operation::Or(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_E,
        "OR E",
        None,
        Operation::Or(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_H,
        "OR H",
        None,
        Operation::Or(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_L,
        "OR L",
        None,
        Operation::Or(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::OR_HL,
        "OR (HL)",
        None,
        Operation::Or(Source8::Addr(At::HL)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::OR_A,
        "OR A",
        None,
        Operation::Or(Source8::A),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_B,
        "CP B",
        None,
        Operation::Cp(Source8::B),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_C,
        "CP C",
        None,
        Operation::Cp(Source8::C),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_D,
        "CP D",
        None,
        Operation::Cp(Source8::D),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_E,
        "CP E",
        None,
        Operation::Cp(Source8::E),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_H,
        "CP H",
        None,
        Operation::Cp(Source8::H),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_L,
        "CP L",
        None,
        Operation::Cp(Source8::L),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_HL,
        "CP (HL)",
        None,
        Operation::Cp(Source8::Addr(At::HL)),
        vec![Clock::Four],
    ),
    /// 0xC0 - 0xCF
    Instruction::new(
        Opcode::RET_NZ,
        "RET NZ",
        None,
        Operation::Ret(Condition::NZ),
        vec![Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::POP_BC,
        "POP BC",
        None,
        Operation::Pop(Source16::BC),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::JP_NZ_a16,
        "JP NZ, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::NZ),
        vec![Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::JP_a16,
        "JP {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::Always),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::CALL_NZ_a16,
        "CALL NZ, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::NZ),
        vec![Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::PUSH_BC,
        "PUSH BC",
        None,
        Operation::Push(Source16::BC),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::ADD_A_d8,
        "ADD A, {:#04x}",
        Some(Imm::Eight),
        Operation::Add8(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_00H,
        "RST 00H",
        None,
        Operation::Rst(Page0::Byte0),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RET_Z,
        "RET Z",
        None,
        Operation::Ret(Condition::Z),
        vec![Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::RET,
        "RET",
        None,
        Operation::Ret(Condition::Always),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::JP_Z_a16,
        "JP Z, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::Z),
        vec![Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::CALL_Z_a16,
        "CALL Z, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::Z),
        vec![Clock::TwelveFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::CALL_a16,
        "CALL {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::Always),
        vec![Clock::TwentyFour],
    ),
    Instruction::new(
        Opcode::ADC_A_d8,
        "ADC A, {:#04x}",
        Some(Imm::Eight).
        Operation::Adc(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_08H,
        "RST 08H",
        None,
        Operation::Rst(Page0::Byte1),
        vec![Clock::Sixteen],
    ),
    /// 0xD0 -0xDF
    Instruction::new(
        Opcode::RET_NC,
        "RET NC",
        None,
        Operation::Ret(Condition::NC),
        vec![Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::POP_DE,
        "POP DE",
        None,
        Operation::Pop(Source16::DE),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::JP_NC_a16,
        "JP NC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Conditon::NC),
        vec![Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::CALL_NC_a16,
        "CALL NC, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::NC),
        vec![Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::PUSH_DE,
        "PUSH DE",
        None,
        Operation::Push(Source16::DE),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::SUB_d8,
        "SUB {:#04x}",
        Some(Imm::Eight),
        Operation::Sub(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_10H,
        "RST 10H",
        None,
        Operation::Rst(Page0::Byte2),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RET_C,
        "RET C",
        None,
        Operation::Ret(Condition::C),
        vec![Clock::Twenty, Clock::Eight],
    ),
    Instruction::new(
        Opcode::RETI,
        "RETI",
        None,
        Operation::Reti,
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::JP_C_a16,
        "JP C, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Jp(Condition::C),
        vec![Clock::Sixteen, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::CALL_C_a16,
        "CALL C, {:#06x}",
        Some(Imm::Sixteen),
        Operation::Call(Condition::C),
        vec![Clock::TwentyFour, Clock::Twelve],
    ),
    Instruction::new(
        Opcode::SBC_A_d8,
        "SBC A, {:#04x}",
        Some(Imm::Eight),
        Operation::Sbc(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_18H,
        "RST 18H",
        None,
        Operation::Rst(Page0::Byte3),
        vec![Clock::Sixteen],
    ),
    /// 0xE0 - 0xEF

    Instruction::new(
        Opcode::LDH_a8_A,
        "LDH {:#04x}, A",
        Some(Imm::Eight),
        Operation::Load8Half(Target8::Addr(At::Imm8), Source8::A),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::POP_HL,
        "POP HL",
        None,
        Operation::Pop(Source16::HL),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_aC_A,
        "LD (C), A",
        None,
        Operation::Load8(Target8::Addr(At::C), Source8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::PUSH_HL,
        "PUSH HL",
        None,
        Operation::Push(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::AND_d8,
        "AND {:#04x}",
        Some(Imm::Eight),
        Operation::And(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_20H,
        "RST 20H",
        None,
        Operation::Rst(Page0::Byte4),
        vec![Clock::Sixteen],
    ),
    //TODO: pas certaine de cette instruction
    Instruction::new(
        Opcode::ADD_SP_r8,
        "ADD SP, {:#04x}",
        Some(Imm::Eight),
        Operation::Add16(Target16::SP, Source16::Imm8),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::JP_aHL,
        "JP (HL)",
        None,
        Operation::Jp(Condition::Always, Source16::HL),
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::LD_a16_A,
        "LD {:#06x}",
        Some(Imm::Sixteen),
        Operation::Load8(Target8::Addr(At::Imm16), Source8::A),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::XOR_d8,
        "XOR {:#04x}",
        Some(Imm::Eight),
        Operation::Xor(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_28H,
        "RST 20H",
        None,
        Operation::Rst(Page0::Byte5),
        vec![Clock::Sixteen],
    ),
    /// 0xF0 - 0xFF

    Instruction::new(
        Opcode::LDH_A_a8,
        "LDH A, {:#04x}",
        Some(Imm::Eight),
        Operation::Load8Half(Target8::A, Source8::Addr(At::Imm8)),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::POP_AF,
        "POP AF",
        None,
        Operation::Pop(Source16::AF),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_A_aC,
        "LD A, (C)",
        None,
        Operation::Load8(Target8::A, Source8::Addr(At::C)),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::DI,
        "DI",
        None,
        Operation::Di,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::PUSH_AF,
        "PUSH AF",
        None,
        Operation::Push(Source16::AF),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::OR_d8,
        "OR {:#04x}",
        Some(Imm::Eight),
        Operation::Or(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_30H,
        "RST 30H",
        None,
        Operation::Rst(Page0::Byte6),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::LD_HL_SP_r8,
        "LD HL, SP+{:#04x}",
        Some(Imm::Eight),
        Operation::Load16(Target16::HL, Source16::SP, Source16::Imm8),
        vec![Clock::Twelve],
    ),
    Instruction::new(
        Opcode::LD_A_a16,
        "LD A, {:#08x}",
        Some(Imm::Sixteen),
        Operation::Load8(Target8::A, Source8::Addr(At::Imm16)),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::XOR_d8,
        "XOR {:#04x}",
        Some(Imm::Eight),
        Operation::Xor(Source8::Imm8),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::EI,
        "EI",
        None,
        Operation::Ei,
        vec![Clock::Four],
    ),
    Instruction::new(
        Opcode::CP_d8,
        "CP {:#04x}",
        Some(Imm::Eight),
        Operation::Cp(Source8::Imm8),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RST_38H,
        "RST 38H",
        None,
        Operation::Rst(Page0::Byte7),
        vec![Clock::Sixteen],
    ),

    /// CB-prefixed instruction
    /// 0x00 - 0x0F
    Instruction::new(
        Opcode::RLC_B,
        "RLC B",
        None,
        Operation::Rlc(Source8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_C,
        "RLC C",
        None,
        Operation::Rlc(Source8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_D,
        "RLC D",
        None,
        Operation::Rlc(Source8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_E,
        "RLC E",
        None,
        Operation::Rlc(Source::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_H,
        "RLC H",
        None,
        Operation::Rlc(Source::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_L,
        "RLC L",
        None,
        Operation::Rlc(Source::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RLC_HL,
        "RLC HL",
        None,
        Operation::Rlc(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RLC_A,
        "RLC A",
        None,
        Operation::Rlc(Source::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_B,
        "RRC B",
        None,
        Operation::Rrc(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_C,
        "RRC C",
        None,
        Operation::Rrc(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_D,
        "RRC D",
        None,
        Operation::Rrc(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_E,
        "RRC E",
        None,
        Operation::Rrc(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_H,
        "RRC H",
        None,
        Operation::Rrc(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_L,
        "RRC L",
        None,
        Operation::Rrc(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RRC_HL,
        "RRC HL",
        None,
        Operation::Rrc(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RRC_A,
        "RRC A",
        None,
        Operation::Rrc(Target8::A),
        vec![Clock::Eight],
    ),
    /// 0x10 - 0x1F
    Instruction::new(
        Opcode::RL_B,
        "RL B",
        None,
        Operation::Rl(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_C,
        "RL C",
        None,
        Operation::Rl(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_D,
        "RL D",
        None,
        Operation::Rl(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_E,
        "RL E",
        None,
        Operation::Rl(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_H,
        "RL H",
        None,
        Operation::Rl(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_L,
        "RL L",
        None,
        Operation::Rl(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RL_HL,
        "RL HL",
        None,
        Operation::Rl(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RL_A,
        "RL A",
        None,
        Operation::Rl(Target8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_B,
        "RR B",
        None,
        Operation::Rr(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_C,
        "RR C",
        None,
        Operation::Rr(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_D,
        "RR D",
        None,
        Operation::Rr(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_E,
        "RR E",
        None,
        Operation::Rr(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_H,
        "RR H",
        None,
        Operation::Rr(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_L,
        "RR L",
        None,
        Operation::Rr(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::RR_HL,
        "RR HL",
        None,
        Operation::Rr(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::RR_A,
        "RR A",
        None,
        Operation::Rr(Target8::A),
        vec![Clock::Eight],
    ),
    /// 0x20 - 0x2F
    Instruction::new(
        Opcode::SLA_B,
        "SLA B",
        None,
        Operation::Sla(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_C,
        "SLA C",
        None,
        Operation::Sla(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_D,
        "SLA D",
        None,
        Operation::Sla(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_E,
        "SLA E",
        None,
        Operation::Sla(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_H,
        "SLA H",
        None,
        Operation::Sla(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_L,
        "SLA L",
        None,
        Operation::Sla(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SLA_HL,
        "SLA HL",
        None,
        Operation::Sla(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::SLA_A,
        "SLA A",
        None,
        Operation::Sla(Target8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_B,
        "SRA B",
        None,
        Operation::Sra(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_C,
        "SRA C",
        None,
        Operation::Sra(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_D,
        "SRA D",
        None,
        Operation::Sra(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_E,
        "SRA E",
        None,
        Operation::Sra(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_H,
        "SRA H",
        None,
        Operation::Sra(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_L,
        "SRA L",
        None,
        Operation::Sra(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRA_HL,
        "SRA HL",
        None,
        Operation::Sra(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::SRA_A,
        "SRA A",
        None,
        Operation::Sra(Target8::A),
        vec![Clock::Eight],
    ),
    /// 0x30 - 0x3F
    Instruction::new(
        Opcode::SWAP_B,
        "SWAP B",
        None,
        Operation::Swap(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_C,
        "SWAP C",
        None,
        Operation::Swap(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_D,
        "SWAP D",
        None,
        Operation::Swap(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_E,
        "SWAP E",
        None,
        Operation::Swap(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_H,
        "SWAP H",
        None,
        Operation::Swap(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_L,
        "SWAP L",
        None,
        Operation::Swap(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SWAP_HL,
        "SWAP HL",
        None,
        Operation::Swap(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::SWAP_A,
        "SWAP A",
        None,
        Operation::Swap(Target8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_B,
        "SRL B",
        None,
        Operation::Srl(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_C,
        "SRL C",
        None,
        Operation::Srl(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_D,
        "SRL D",
        None,
        Operation::Srl(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_E,
        "SRL E",
        None,
        Operation::Srl(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_H,
        "SRL H",
        None,
        Operation::Srl(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_L,
        "SRL L",
        None,
        Operation::Srl(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::SRL_HL,
        "SRL HL",
        None,
        Operation::Srl(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::SRL_A,
        "SRL A",
        None,
        Operation::Srl(Target8::A),
        vec![Clock::Eight],
    ),
    /// 0x40 - 0x4F
    Instruction::new(
        Opcode::BIT_0_B,
        "BIT 0, B",
        None,
        Operation::Sla(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_C,
        "BIT 0, C",
        None,
        Operation::Sla(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_D,
        "BIT 0, D",
        None,
        Operation::Sla(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_E,
        "BIT 0, E",
        None,
        Operation::Sla(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_H,
        "BIT 0, H",
        None,
        Operation::Sla(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_L,
        "BIT 0, L",
        None,
        Operation::Sla(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_0_HL,
        "BIT 0, HL",
        None,
        Operation::Sla(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::BIT_0_A,
        "BIT 0, A",
        None,
        Operation::Sla(Target8::A),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_B,
        "BIT 1,B",
        None,
        Operation::Sra(Target8::B),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_C,
        "BIT 1,C",
        None,
        Operation::Sra(Target8::C),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_D,
        "BIT 1,D",
        None,
        Operation::Sra(Target8::D),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_E,
        "BIT 1,E",
        None,
        Operation::Sra(Target8::E),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_H,
        "BIT 1,H",
        None,
        Operation::Sra(Target8::H),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_L,
        "BIT 1,L",
        None,
        Operation::Sra(Target8::L),
        vec![Clock::Eight],
    ),
    Instruction::new(
        Opcode::BIT_1_HL,
        "BIT 1,HL",
        None,
        Operation::Sra(Source16::HL),
        vec![Clock::Sixteen],
    ),
    Instruction::new(
        Opcode::BIT_1_A,
        "BIT 1,A",
        None,
        Operation::Sra(Target8::A),
        vec![Clock::Eight],
    ),

];

pub enum Condition {
    NZ,
    NC,
    C,
    Z,
    Always,
}

pub enum At {
    HL,
    BC,
    DE,
    Imm16,
    C,
    Imm8,
}
pub enum Source8 {
    A,
    B,
    C,
    D,
    E,
    H
    L,
    Imm8,
    Addr(At),
}

pub enum Target8 {
    A,
    B,
    C,
    D,
    E,
    H,
    L,
    Addr(At),
}

pub enum Target16 {
    AF,
    BC,
    DE,
    HL,
    SP,
    Addr
}

pub enum Source16 {
    AF,
    BC,
    DE,
    HL,
    SP,
    Imm16,

}

pub enum Operation {

    /// 8-bit load instructions
    
    Load8(Target8, Source8),

    Load8Half(Target8, Source8),

    Load8Dec(Target8, Source8),

    LoadInc(Target8, Source8),

    /// 16-bit load instructions
    
    Load16(Target16, Source16),

    Push(Source16),

    Pop(Source16),
    
    /// 8-bit arithmetic / logic instructions

    Add8(Source8),

    Adc(Source8),
    
    Sub(Source8),

    Sbc(Source8),
    
    And(Source8),
    
    Xor(Source8),
    
    Or(Source8),

    Cp(Source8),
    
    Inc8(Source8),

    Dec8(Source8),
    
    Daa,
    
    Cpl,
    
    /// 16-bit Arithmetic/Logic instructions

    Add16(Target16, Source16),

    Inc16(Source16),

    Dec16(Source16),

    Load16(Source16),

    /// Rotate and Shift instructions

    Rlca,

    Rla,

    Rrca,

    Rra,

    Rlc(Source8),

    Rl(Source8),
    
    Rrc(Source8),
    
    Rr(Source8),
    
    Sla(Source8),
    
    Swap(Source8),
    
    Sra(Source8),
    
    Srl(Source8),
    
    /// Single-bit Operations instructions

    Bit(Imm::Eight, Target8),

    Set(Imm::Eight, Target8),

    Res(Imm::Eight, Target8),


    /// CPU Control instructions

    Ccf,

    Scf,

    Nop,

    Halt,

    Stop,

    Di,

    Ei,

    /// Jump instructions
    
    Jp(Condition, Target16),

    Jr(Condition, Imm::Sixteen),

    Call(Condition, Imm::Sixteen),

    Ret(Condition),

    Reti,

    Rst(Page0),
}

#[allow(non_camel_case_types)]
#[derive(PartialEq)]
pub enum Opcode {

    /// Non CB prefixed opcodes
    NOP,
    LD_BC_d16,
    LD_BC_A,
    INC_BC,
    INC_B,
    DEC_B,
    LD_B_d8,
    RLCA,
    LD_a16_SP,
    ADD_HL_BC,
    LD_A_BC,
    DEC_BC,
    INC_C,
    DEC_C,
    LD_C_d8,
    RRCA,

    STOP,
    LD_DE_d16,
    LD_DE_A,
    INC_DE,
    INC_D,
    DEC_D,
    LD_D_d8,
    RLA,
    JR_r8,
    ADD_HL_DE,
    LD_A_DE,
    DEC_DE,
    INC_E,
    DEC_E,
    LD_E_d8,
    RRA,

    JR_NZ_r8,
    LD_HL_d16,
    LDI_HL_A,
    INC_HL,
    INC_H,
    DEC_H,
    LD_H_d8,
    DAA,
    JR_Z_r8,
    ADD_HL_HL,
    LDI_A_HL,
    DEC_HL,
    INC_L,
    DEC_L,
    LD_L_d8,
    CPL,

    JR_NC_r8,
    LD_SP_d16,
    LD_HL_A,
    INC_SP,
    INC_HL,
    DEC_HL,
    LD_HL_d8,
    SCF,
    JR_C_r8,
    ADD_HL_SP,
    LD_A_HL,
    DEC_SP,
    INC_A,
    DEC_A,
    LD_A_d8,
    CCF,

    LD_B_B,
    LD_B_C,
    LD_B_D,
    LD_B_E,
    LD_B_H,
    LD_B_L,
    LD_B_HL,
    LD_B_A,
    LD_C_B,
    LD_C_C,
    LD_C_D,
    LD_C_E,
    LD_C_H,
    LD_C_L,
    LD_C_HL,
    LD_C_A,

    LD_D_B,
    LD_D_C,
    LD_D_D,
    LD_D_E,
    LD_D_H,
    LD_D_L,
    LD_D_HL,
    LD_D_A,
    LD_E_B,
    LD_E_C,
    LD_E_D,
    LD_E_E,
    LD_E_H,
    LD_E_L,
    LD_E_HL,
    LD_E_A,

    LD_H_B,
    LD_H_C,
    LD_H_D,
    LD_H_E,
    LD_H_H,
    LD_H_L,
    LD_H_HL,
    LD_H_A,
    LD_L_B,
    LD_L_C,
    LD_L_D,
    LD_L_E,
    LD_L_H,
    LD_L_L,
    LD_L_HL,
    LD_L_A,

    LD_HL_B,
    LD_HL_C,
    LD_HL_D,
    LD_HL_E,
    LD_HL_H,
    LD_HL_L,
    HALT,
    LD_HL_A,
    LD_A_B,
    LD_A_C,
    LD_A_D,
    LD_A_E,
    LD_A_H,
    LD_A_L,
    LD_A_HL,
    LD_A_A,

    ADD_A_B,
    ADD_A_C,
    ADD_A_D,
    ADD_A_E,
    ADD_A_H,
    ADD_A_L,
    ADD_A_HL,
    ADD_A_A,
    ADC_A_B,
    ADC_A_C,
    ADC_A_D,
    ADC_A_E,
    ADC_A_H,
    ADC_A_L,
    ADC_A_HL,
    ADC_A_A,

    SUB_B,
    SUB_C,
    SUB_D,
    SUB_E,
    SUB_H,
    SUB_L,
    SUB_HL,
    SUB_A,
    SBC_A_B,
    SBC_A_C,
    SBC_A_D,
    SBC_A_E,
    SBC_A_H,
    SBC_A_L,
    SBC_A_HL,
    SBC_A_A,

    AND_B,
    AND_C,
    AND_D,
    AND_E,
    AND_H,
    AND_L,
    AND_HL,
    AND_A,
    XOR_B,
    XOR_C,
    XOR_D,
    XOR_E,
    XOR_H,
    XOR_L,
    XOR_HL,
    XOR_A,

    OR_B,
    OR_C,
    OR_D,
    OR_E,
    OR_H,
    OR_L,
    OR_HL,
    OR_A,
    CP_B,
    CP_C,
    CP_D,
    CP_D,
    CP_E,
    CP_H,
    CP_L,
    CP_HL,
    CP_A,

    RET_NZ,
    POP,
    JP_NZ_a16,
    JP_a16,
    CALL_NZ_a16,
    PUSH_BC,
    ADD_A_d8,
    RST_00H,
    RET_Z,
    RET,
    JP_Z_a16,
    CALL_Z_a16,
    CALL_a16,
    ADC_A_d8,
    RST_08H,

    RET_NC,
    POP_DE,
    JP_NC_a16,
    CALL_NC_a16,
    PUSH_DE,
    SUB_d8,
    RST_10H,
    RET_C,
    RETI,
    JP_C_a16,
    CALL_C_A16,
    SBC_A_d8,
    RST_18H,

    LDH_a8_A,
    POP_HL,
    LD_aC_A,
    PUSH_HL,
    AND_d8,
    RST_20H,
    ADD_SP_r8,
    JP_HL,
    LD_a16_A,
    XOR_d8,
    RST_28h,

    LDH_A_a8,
    POP_AF,
    LD_A_aC,
    DI,
    PUSH_AF,
    OR_d8,
    RST_30H,
    LD_HL_SPr8
    LD_SP_HL,
    LD_A_a16,
    EI,
    CP_d8,
    RST_38H,

    /// CB prefixed opcodes
    RLC_B,
    RLC_C,
    RLC_D,
    RLC_E,
    RLC_H,
    RLC_L,
    RLC_HL,
    RLC_A,
    RRC_B,
    RRC_C,
    RRC_D,
    RRC_E,
    RRC_H,
    RRC_L,
    RRC_HL,
    RRC_A,
            
    RL_B,
    RL_C,
    RL_D,
    RL_E,
    RL_H,
    RL_L,
    RL_HL,
    RL_A,
    RR_B,
    RR_C,
    RR_D,
    RR_E,
    RR_H,
    RR_L,
    RR_HL,
    RR_A,
            
    SLA_B,
    SLA_C,
    SLA_D,
    SLA_E,
    SLA_H,
    SLA_L,
    SLA_HL,
    SLA_A,
    SRA_B,
    SRA_C,
    SRA_D,
    SRA_E,
    SRA_H,
    SRA_L,
    SRA_HL,
    SRA_A,
            
    SWAP_B,
    SWAP_C,
    SWAP_D,
    SWAP_E,
    SWAP_H,
    SWAP_L,
    SWAP_HL,
    SWAP_A,
    SRL_B,
    SRL_C,
    SRL_D,
    SRL_E,
    SRL_H,
    SRL_L,
    SRL_HL,
    SRL_A,
            
    BIT_0_B,
    BIT_0_C,
    BIT_0_D,
    BIT_0_E,
    BIT_0_H,
    BIT_0_L,
    BIT_0_HL,
    BIT_0_A,
    BIT_1_B,
    BIT_1_C,
    BIT_1_D,
    BIT_1_E,
    BIT_1_H,
    BIT_1_L,
    BIT_1_HL,
    BIT_1_A,

    BIT_2_B,
    BIT_2_C,
    BIT_2_D,
    BIT_2_E,
    BIT_2_H,
    BIT_2_L,
    BIT_2_HL,
    BIT_2_A,
    BIT_3_B,
    BIT_3_C,
    BIT_3_D,
    BIT_3_E,
    BIT_3_H,
    BIT_3_L,
    BIT_3_HL,
    BIT_3_A,
            
    BIT_4_B,
    BIT_4_C,
    BIT_4_D,
    BIT_4_E,
    BIT_4_H,
    BIT_4_L,
    BIT_4_HL,
    BIT_4_A,
    BIT_5_B,
    BIT_5_C,
    BIT_5_D,
    BIT_5_E,
    BIT_5_H,
    BIT_5_L,
    BIT_5_HL,
    BIT_5_A,
            
    BIT_6_B,
    BIT_6_C,
    BIT_6_D,
    BIT_6_E,
    BIT_6_H,
    BIT_6_L,
    BIT_6_HL,
    BIT_6_A,
    BIT_7_B,
    BIT_7_C,
    BIT_7_D,
    BIT_7_E,
    BIT_7_H,
    BIT_7_L,
    BIT_7_HL,
    BIT_7_A,

    RES_B,
    RES_C,
    RES_D,
    RES_E,
    RES_H,
    RES_L,
    RES_HL,
    RES_A,
    RES_1_B,
    RES_1_C,
    RES_1_D,
    RES_1_E,
    RES_1_H,
    RES_1_L,
    RES_1_HL,
    RES_1_A,

    RES_2_B,
    RES_2_C,
    RES_2_D,
    RES_2_E,
    RES_2_H,
    RES_2_L,
    RES_2_HL,
    RES_2_A,
    RES_3_B,
    RES_3_C,
    RES_3_D,
    RES_3_E,
    RES_3_H,
    RES_3_L,
    RES_3_HL,
    RES_3_A,

    RES_4_B,
    RES_4_C,
    RES_4_D,
    RES_4_E,
    RES_4_H,
    RES_4_L,
    RES_4_HL,
    RES_4_A,
    RES_5_B,
    RES_5_C,
    RES_5_D,
    RES_5_E,
    RES_5_H,
    RES_5_L,
    RES_5_HL,
    RES_5_A,

    RES_6_B,
    RES_6_C,
    RES_6_D,
    RES_6_E,
    RES_6_H,
    RES_6_L,
    RES_6_HL,
    RES_6_A,
    RES_7_B,
    RES_7_C,
    RES_7_D,
    RES_7_E,
    RES_7_H,
    RES_7_L,
    RES_7_HL,
    RES_7_A,
            
    SET_0_B,
    SET_0_C,
    SET_0_D,
    SET_0_E,
    SET_0_H,
    SET_0_L,
    SET_0_HL,
    SET_0_A,
    SET_1_B,
    SET_1_C,
    SET_1_D,
    SET_1_E,
    SET_1_H,
    SET_1_L,
    SET_1_HL,
    SET_1_A,

    SET_2_B,
    SET_2_C,
    SET_2_D,
    SET_2_E,
    SET_2_H,
    SET_2_L,
    SET_2_HL,
    SET_2_A,
    SET_3_B,
    SET_3_C,
    SET_3_D,
    SET_3_E,
    SET_3_H,
    SET_3_L,
    SET_3_HL,
    SET_3_A,
            
    SET_4_B,
    SET_4_C,
    SET_4_D,
    SET_4_E,
    SET_4_H,
    SET_4_L,
    SET_4_HL,
    SET_4_A,
    SET_5_B,
    SET_5_C,
    SET_5_D,
    SET_5_E,
    SET_5_H,
    SET_5_L,
    SET_5_HL,
    SET_5_A,

    SET_6_B,
    SET_6_C,
    SET_6_D,
    SET_6_E,
    SET_6_H,
    SET_6_L,
    SET_6_HL,
    SET_6_A,
    SET_7_B,
    SET_7_C,
    SET_7_D,
    SET_7_E,
    SET_7_H,
    SET_7_L,
    SET_7_HL,
}
